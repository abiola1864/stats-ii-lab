ron <- 6
tra <- -1.7
carbon_tax_panel_df <- carbon_tax_df %>% mutate(co2_per_capita = baseline + year_effect + income_effect + noise +
(year == 2009) * year_2009 + (year == 2010) * year_2010 +
(year == 2011) * year_2011 + (year == 2012) * year_2012 +
(year == 2013) * year_2013 + (year == 2014) * year_2014 +
(year == 2015) * year_2015 + (year == 2016) * year_2016 +
(year == 2017) * year_2017 + (year == 2018) * year_2018 +
(year == 2019) * year_2019 +
(country_name == "Adjikistan") * adji +
(country_name == "Adjikistan" & year == 2009) * 0.2 +
(country_name == "Adjikistan" & year == 2010) * 0.1 +
(country_name == "Adjikistan" & year == 2011) * 0.7 +
(country_name == "Adjikistan" & year == 2012) * 0.1 +
(country_name == "Adjikistan" & year == 2013) * 0.5 +
(country_name == "Adjikistan" & year == 2014) * 0.2 +
(country_name == "Adjikistan" & year == 2015) * 0.2 +
(country_name == "Adjikistan" & year == 2016) * 0.2 +
(country_name == "Adjikistan" & year == 2017) * 0.2 +
(country_name == "Adjikistan" & year == 2018) * 0.2 +
(country_name == "Adjikistan" & year == 2019) * 1 +
(country_name == "Barovia") * baro +
(country_name == "Barovia" & year == 2009) * 0.2 +
(country_name == "Barovia" & year == 2010) * 0.4 +
(country_name == "Barovia" & year == 2011) * 0.3 +
(country_name == "Barovia" & year == 2012) * 2 +
(country_name == "Barovia" & year == 2013) * 0.8 +
(country_name == "Barovia" & year == 2014) * 0.8 +
(country_name == "Barovia" & year == 2015) * 0.2 +
(country_name == "Barovia" & year == 2016) * 0.1 +
(country_name == "Barovia" & year == 2017) * 1.2 +
(country_name == "Barovia" & year == 2018) * 0.3 +
(country_name == "Barovia" & year == 2019) * 0.1 +
(country_name == "Carpania") * carpa +
(country_name == "Carpania" & year == 2009) * 0.1 +
(country_name == "Carpania" & year == 2010) * 0.3 +
(country_name == "Carpania" & year == 2011) * -0.5 +
(country_name == "Carpania" & year == 2012) * 0.5 +
(country_name == "Carpania" & year == 2013) * 1 +
(country_name == "Carpania" & year == 2014) * -0.1 +
(country_name == "Carpania" & year == 2015) * -0.2 +
(country_name == "Carpania" & year == 2016) * -0.4 +
(country_name == "Carpania" & year == 2017) * 0.2 +
(country_name == "Carpania" & year == 2018) * 0.3 +
(country_name == "Carpania" & year == 2019) * 0.5 +
(country_name == "Corinthia") * cori +
(country_name == "Corinthia" & year == 2009) * 1 +
(country_name == "Corinthia" & year == 2010) * 0.2 +
(country_name == "Corinthia" & year == 2011) * 0.4 +
(country_name == "Corinthia" & year == 2012) * 0.2 +
(country_name == "Corinthia" & year == 2013) * 0.2 +
(country_name == "Corinthia" & year == 2014) * 0.1 +
(country_name == "Corinthia" & year == 2015) * 0.766 +
(country_name == "Corinthia" & year == 2016) * -1.2 +
(country_name == "Corinthia" & year == 2017) * -1 +
(country_name == "Corinthia" & year == 2018) * -0.1 +
(country_name == "Corinthia" & year == 2019) * -0.8 +
(country_name == "Freedonia") * free +
(country_name == "Freedonia" & year == 2009) * 0.12 +
(country_name == "Freedonia" & year == 2010) * 0.32 +
(country_name == "Freedonia" & year == 2011) * 0.15 +
(country_name == "Freedonia" & year == 2012) * 0.12 +
(country_name == "Freedonia" & year == 2013) * 0.05 +
(country_name == "Freedonia" & year == 2014) * -0.14 +
(country_name == "Freedonia" & year == 2015) * -0.02 +
(country_name == "Freedonia" & year == 2016) * -0.4 +
(country_name == "Freedonia" & year == 2017) * -0.3 +
(country_name == "Freedonia" & year == 2018) * -0.1 +
(country_name == "Freedonia" & year == 2019) * -0.1 +
(country_name == "Glenraven") * glen +
(country_name == "Glenraven" & year == 2009) * 0.2 +
(country_name == "Glenraven" & year == 2010) * 0.38 +
(country_name == "Glenraven" & year == 2011) * 0.96 +
(country_name == "Glenraven" & year == 2012) * 0.34 +
(country_name == "Glenraven" & year == 2013) * 0.5 +
(country_name == "Glenraven" & year == 2014) * 0.4 +
(country_name == "Glenraven" & year == 2015) * 0.2 +
(country_name == "Glenraven" & year == 2016) * 0.2 +
(country_name == "Glenraven" & year == 2017) * 0.3 +
(country_name == "Glenraven" & year == 2018) * -0.2 +
(country_name == "Glenraven" & year == 2019) * -1.5 +
(country_name == "Khemed") * khe +
(country_name == "Khemed" & year == 2009) * 0.78 +
(country_name == "Khemed" & year == 2010) * - 0.32 +
(country_name == "Khemed" & year == 2011) * - 0.35 +
(country_name == "Khemed" & year == 2012) * - 0.22 +
(country_name == "Khemed" & year == 2013) * 0.35 +
(country_name == "Khemed" & year == 2014) * 0.24 +
(country_name == "Khemed" & year == 2015) * 0.72 +
(country_name == "Khemed" & year == 2016) * 0.41 +
(country_name == "Khemed" & year == 2017) * 0.22 +
(country_name == "Khemed" & year == 2018) * 1 +
(country_name == "Khemed" & year == 2019) * -0.5 +
(country_name == "Laurania") * lau +
(country_name == "Laurania" & year == 2009) * 0.12 +
(country_name == "Laurania" & year == 2010) * 0.2 +
(country_name == "Laurania" & year == 2011) * 0.75 +
(country_name == "Laurania" & year == 2012) * 0.16 +
(country_name == "Laurania" & year == 2013) * 0.22 +
(country_name == "Laurania" & year == 2014) * 0.34 +
(country_name == "Laurania" & year == 2015) * 0.32 +
(country_name == "Laurania" & year == 2016) * 0.44 +
(country_name == "Laurania" & year == 2017) * 0.2 +
(country_name == "Laurania" & year == 2018) * 0.2 +
(country_name == "Laurania" & year == 2019) * 0.1 +
(country_name == "Parano") * para +
(country_name == "Parano" & year == 2009) * 0.3 +
(country_name == "Parano" & year == 2010) * 0.5 +
(country_name == "Parano" & year == 2011) * 0.1 +
(country_name == "Parano" & year == 2012) * 0.12 +
(country_name == "Parano" & year == 2013) * 0.5 +
(country_name == "Parano" & year == 2014) * 0.34 +
(country_name == "Parano" & year == 2015) * 0.2 +
(country_name == "Parano" & year == 2016) * 0.4 +
(country_name == "Parano" & year == 2017) * 0.3 +
(country_name == "Parano" & year == 2018) * 0.1 +
(country_name == "Parano" & year == 2019) * -0.4 +
(country_name == "Ron") * rum +
(country_name == "Ron" & year == 2009) * 0.12 +
(country_name == "Ron" & year == 2010) * 0.22 +
(country_name == "Ron" & year == 2011) * 0.4 +
(country_name == "Ron" & year == 2012) * 0.2 +
(country_name == "Ron" & year == 2013) * 0.2 +
(country_name == "Ron" & year == 2014) * 0.43 +
(country_name == "Ron" & year == 2015) * 0.23 +
(country_name == "Ron" & year == 2016) * -0.42 +
(country_name == "Ron" & year == 2017) * -0.33 +
(country_name == "Ron" & year == 2018) * -1 +
(country_name == "Ron" & year == 2019) * -1 +
(country_name == "Rumekistan") * ron +
(country_name == "Rumekistan" & year == 2009) * 0.12 +
(country_name == "Rumekistan" & year == 2010) * 0.32 +
(country_name == "Rumekistan" & year == 2011) * 0.15 +
(country_name == "Rumekistan" & year == 2012) * 0.12 +
(country_name == "Rumekistan" & year == 2013) * 0.05 +
(country_name == "Rumekistan" & year == 2014) * 0.14 +
(country_name == "Rumekistan" & year == 2015) * 0.02 +
(country_name == "Rumekistan" & year == 2016) * 0.4 +
(country_name == "Rumekistan" & year == 2017) * 0.3 +
(country_name == "Rumekistan" & year == 2018) * 0.1 +
(country_name == "Rumekistan" & year == 2019) * -0.1 +
(country_name == "Transia") * tra +
(country_name == "Transia" & year == 2009) * 0.12 +
(country_name == "Transia" & year == 2010) * 0.32 +
(country_name == "Transia" & year == 2011) * 0.15 +
(country_name == "Transia" & year == 2012) * 0.12 +
(country_name == "Transia" & year == 2013) * 0.05 +
(country_name == "Transia" & year == 2014) * 0.14 +
(country_name == "Transia" & year == 2015) * 0.02 +
(country_name == "Transia" & year == 2016) * 0.43 +
(country_name == "Transia" & year == 2017) * 0.122 +
(country_name == "Transia" & year == 2018) * 0.122 +
(country_name == "Transia" & year == 2019) * 0.4 +
(tax == 1) * - 4) %>%
select(country_name, country_code, year, tax, income_class, region, co2_per_capita)
carbon_tax_panel_df$year <- factor(carbon_tax_panel_df$year)
carbon_tax_panel_df
write.csv(carbon_tax_panel_df, file = "./data/carbon_tax_df.csv", row.names = FALSE)
ggplot(carbon_tax_panel_df, aes(x = year, y= co2_per_capita, color = factor(tax), label = country_code)) + geom_point() +
geom_text()
ggplot(carbon_tax_panel_df, aes(x = year, y= co2_per_capita, color = factor(tax), label = country_code)) +
geom_text()
ggplot(carbon_tax_panel_df, aes(x = year, y= co2_per_capita, color = factor(tax), label = country_name)) +
geom_text()
ggplot(carbon_tax_panel_df, aes(x = year, y= co2_per_capita, color = factor(tax), label = country_name)) +
geom_label()
ggplot(carbon_tax_panel_df, aes(x = year, y= co2_per_capita, color = factor(tax), label = country_code)) +
geom_label()
ggplot(carbon_tax_panel_df, aes(x = year, y= co2_per_capita, color = factor(tax), label = country_code)) +
geom_text()
country_name <- factor(rep(c("Adjikistan", "Borovia", "Carpania", "Corinthia", "Freedonia", "Glenraven",
"Khemed", "Laurania", "Parano", "Rumekistan", "Ron", "Transia"), each = 11))
country_code <- factor(rep(c("ADJ", "BOR", "CAR", "COR", "FRE", "GLE",
"KHE", "LAU", "PAR", "RUM", "RON", "TRA"), each = 11))
year <- rep(seq(2009, 2019), 12)
income_class <- factor(rep(rep(c("Low", "Low-Middle", "High-Middle", "High"), each = 11), 3), levels = c("Low", "Low-Middle", "High-Middle", "High"))
income_class_num <- rep(rep(seq(1:4), each = 11),3)
baseline <- 3.5 + rnorm(132, 0, 0.4)
tax <- c(rep(0, 11), rep(0,6), rep(1, 5),
rep(0,6), rep(1, 5), rep(0,11),
rep(0,7), rep(1, 4), rep(0,3), rep(1, 8),
rep(0,2), rep(1, 8), 0, rep(0,4), rep(1, 7),
rep(0,11), rep(0,11),
rep(0,6), rep(1, 5), rep(0,2), rep(1, 9))
region <- factor(rep(c("Uralia", "Andinia", "Pacifica", "Northia"), each = 33))
year_effect <- (((year^4) /1000000 - 16000) / 100000 - 160)
income_effect <- income_class_num^4 /100
noise <- rnorm(132, 1, 0.8)
carbon_tax_df <- tibble(country_name, country_code, year, tax, income_class, year_effect, income_effect, noise)
## create noise
year_2009 <- 2
year_2010 <- -3
year_2011 <- 3
year_2012 <- -1.3
year_2013 <- 1
year_2014 <- -1
year_2015 <- -3
year_2016 <- -3
year_2017 <- -1
year_2018 <- -3
year_2019 <- -2
adji <- -1.5
baro <- 2
carpa <- 3
cori <- 3.4
free <- 5
glen <- -1
khe <- -3.2
lau <- -3
para <- 2.5
rum <- 1
ron <- 6
tra <- -1.7
carbon_tax_panel_df <- carbon_tax_df %>% mutate(co2_per_capita = baseline + year_effect + income_effect + noise +
(year == 2009) * year_2009 + (year == 2010) * year_2010 +
(year == 2011) * year_2011 + (year == 2012) * year_2012 +
(year == 2013) * year_2013 + (year == 2014) * year_2014 +
(year == 2015) * year_2015 + (year == 2016) * year_2016 +
(year == 2017) * year_2017 + (year == 2018) * year_2018 +
(year == 2019) * year_2019 +
(country_name == "Adjikistan") * adji +
(country_name == "Adjikistan" & year == 2009) * 0.2 +
(country_name == "Adjikistan" & year == 2010) * 0.1 +
(country_name == "Adjikistan" & year == 2011) * 0.7 +
(country_name == "Adjikistan" & year == 2012) * 0.1 +
(country_name == "Adjikistan" & year == 2013) * 0.5 +
(country_name == "Adjikistan" & year == 2014) * 0.2 +
(country_name == "Adjikistan" & year == 2015) * 0.2 +
(country_name == "Adjikistan" & year == 2016) * 0.2 +
(country_name == "Adjikistan" & year == 2017) * 0.2 +
(country_name == "Adjikistan" & year == 2018) * 0.2 +
(country_name == "Adjikistan" & year == 2019) * 1 +
(country_name == "Barovia") * baro +
(country_name == "Barovia" & year == 2009) * 0.2 +
(country_name == "Barovia" & year == 2010) * 0.4 +
(country_name == "Barovia" & year == 2011) * 0.3 +
(country_name == "Barovia" & year == 2012) * 2 +
(country_name == "Barovia" & year == 2013) * 0.8 +
(country_name == "Barovia" & year == 2014) * 0.8 +
(country_name == "Barovia" & year == 2015) * 0.2 +
(country_name == "Barovia" & year == 2016) * 0.1 +
(country_name == "Barovia" & year == 2017) * 1.2 +
(country_name == "Barovia" & year == 2018) * 0.3 +
(country_name == "Barovia" & year == 2019) * 0.1 +
(country_name == "Carpania") * carpa +
(country_name == "Carpania" & year == 2009) * 0.1 +
(country_name == "Carpania" & year == 2010) * 0.3 +
(country_name == "Carpania" & year == 2011) * -0.5 +
(country_name == "Carpania" & year == 2012) * 0.5 +
(country_name == "Carpania" & year == 2013) * 1 +
(country_name == "Carpania" & year == 2014) * -0.1 +
(country_name == "Carpania" & year == 2015) * -0.2 +
(country_name == "Carpania" & year == 2016) * -0.4 +
(country_name == "Carpania" & year == 2017) * 0.2 +
(country_name == "Carpania" & year == 2018) * 0.3 +
(country_name == "Carpania" & year == 2019) * 0.5 +
(country_name == "Corinthia") * cori +
(country_name == "Corinthia" & year == 2009) * 1 +
(country_name == "Corinthia" & year == 2010) * 0.2 +
(country_name == "Corinthia" & year == 2011) * 0.4 +
(country_name == "Corinthia" & year == 2012) * 0.2 +
(country_name == "Corinthia" & year == 2013) * 0.2 +
(country_name == "Corinthia" & year == 2014) * 0.1 +
(country_name == "Corinthia" & year == 2015) * 0.766 +
(country_name == "Corinthia" & year == 2016) * -1.2 +
(country_name == "Corinthia" & year == 2017) * -1 +
(country_name == "Corinthia" & year == 2018) * -0.1 +
(country_name == "Corinthia" & year == 2019) * -0.8 +
(country_name == "Freedonia") * free +
(country_name == "Freedonia" & year == 2009) * 0.12 +
(country_name == "Freedonia" & year == 2010) * 0.32 +
(country_name == "Freedonia" & year == 2011) * 0.15 +
(country_name == "Freedonia" & year == 2012) * 0.12 +
(country_name == "Freedonia" & year == 2013) * 0.05 +
(country_name == "Freedonia" & year == 2014) * -0.14 +
(country_name == "Freedonia" & year == 2015) * -0.02 +
(country_name == "Freedonia" & year == 2016) * -0.4 +
(country_name == "Freedonia" & year == 2017) * -0.3 +
(country_name == "Freedonia" & year == 2018) * -0.1 +
(country_name == "Freedonia" & year == 2019) * -0.1 +
(country_name == "Glenraven") * glen +
(country_name == "Glenraven" & year == 2009) * 0.2 +
(country_name == "Glenraven" & year == 2010) * 0.38 +
(country_name == "Glenraven" & year == 2011) * 0.96 +
(country_name == "Glenraven" & year == 2012) * 0.34 +
(country_name == "Glenraven" & year == 2013) * 0.5 +
(country_name == "Glenraven" & year == 2014) * 0.4 +
(country_name == "Glenraven" & year == 2015) * 0.2 +
(country_name == "Glenraven" & year == 2016) * 0.2 +
(country_name == "Glenraven" & year == 2017) * 0.3 +
(country_name == "Glenraven" & year == 2018) * -0.2 +
(country_name == "Glenraven" & year == 2019) * -1.5 +
(country_name == "Khemed") * khe +
(country_name == "Khemed" & year == 2009) * 0.78 +
(country_name == "Khemed" & year == 2010) * - 0.32 +
(country_name == "Khemed" & year == 2011) * - 0.35 +
(country_name == "Khemed" & year == 2012) * - 0.22 +
(country_name == "Khemed" & year == 2013) * 0.35 +
(country_name == "Khemed" & year == 2014) * 0.24 +
(country_name == "Khemed" & year == 2015) * 0.72 +
(country_name == "Khemed" & year == 2016) * 0.41 +
(country_name == "Khemed" & year == 2017) * 0.22 +
(country_name == "Khemed" & year == 2018) * 1 +
(country_name == "Khemed" & year == 2019) * -0.5 +
(country_name == "Laurania") * lau +
(country_name == "Laurania" & year == 2009) * 0.12 +
(country_name == "Laurania" & year == 2010) * 0.2 +
(country_name == "Laurania" & year == 2011) * 0.75 +
(country_name == "Laurania" & year == 2012) * 0.16 +
(country_name == "Laurania" & year == 2013) * 0.22 +
(country_name == "Laurania" & year == 2014) * 0.34 +
(country_name == "Laurania" & year == 2015) * 0.32 +
(country_name == "Laurania" & year == 2016) * 0.44 +
(country_name == "Laurania" & year == 2017) * 0.2 +
(country_name == "Laurania" & year == 2018) * 0.2 +
(country_name == "Laurania" & year == 2019) * 0.1 +
(country_name == "Parano") * para +
(country_name == "Parano" & year == 2009) * 0.3 +
(country_name == "Parano" & year == 2010) * 0.5 +
(country_name == "Parano" & year == 2011) * 0.1 +
(country_name == "Parano" & year == 2012) * 0.12 +
(country_name == "Parano" & year == 2013) * 0.5 +
(country_name == "Parano" & year == 2014) * 0.34 +
(country_name == "Parano" & year == 2015) * 0.2 +
(country_name == "Parano" & year == 2016) * 0.4 +
(country_name == "Parano" & year == 2017) * 0.3 +
(country_name == "Parano" & year == 2018) * 0.1 +
(country_name == "Parano" & year == 2019) * -0.4 +
(country_name == "Ron") * rum +
(country_name == "Ron" & year == 2009) * 0.12 +
(country_name == "Ron" & year == 2010) * 0.22 +
(country_name == "Ron" & year == 2011) * 0.4 +
(country_name == "Ron" & year == 2012) * 0.2 +
(country_name == "Ron" & year == 2013) * 0.2 +
(country_name == "Ron" & year == 2014) * 0.43 +
(country_name == "Ron" & year == 2015) * 0.23 +
(country_name == "Ron" & year == 2016) * -0.42 +
(country_name == "Ron" & year == 2017) * -0.33 +
(country_name == "Ron" & year == 2018) * -1 +
(country_name == "Ron" & year == 2019) * -1 +
(country_name == "Rumekistan") * ron +
(country_name == "Rumekistan" & year == 2009) * 0.12 +
(country_name == "Rumekistan" & year == 2010) * 0.32 +
(country_name == "Rumekistan" & year == 2011) * 0.15 +
(country_name == "Rumekistan" & year == 2012) * 0.12 +
(country_name == "Rumekistan" & year == 2013) * 0.05 +
(country_name == "Rumekistan" & year == 2014) * 0.14 +
(country_name == "Rumekistan" & year == 2015) * 0.02 +
(country_name == "Rumekistan" & year == 2016) * 0.4 +
(country_name == "Rumekistan" & year == 2017) * 0.3 +
(country_name == "Rumekistan" & year == 2018) * 0.1 +
(country_name == "Rumekistan" & year == 2019) * -0.1 +
(country_name == "Transia") * tra +
(country_name == "Transia" & year == 2009) * 0.12 +
(country_name == "Transia" & year == 2010) * 0.32 +
(country_name == "Transia" & year == 2011) * 0.15 +
(country_name == "Transia" & year == 2012) * 0.12 +
(country_name == "Transia" & year == 2013) * 0.05 +
(country_name == "Transia" & year == 2014) * 0.14 +
(country_name == "Transia" & year == 2015) * 0.02 +
(country_name == "Transia" & year == 2016) * 0.43 +
(country_name == "Transia" & year == 2017) * 0.122 +
(country_name == "Transia" & year == 2018) * 0.122 +
(country_name == "Transia" & year == 2019) * 0.4 +
(tax == 1) * - 4) %>%
select(country_name, country_code, year, tax, income_class, region, co2_per_capita)
carbon_tax_panel_df$year <- factor(carbon_tax_panel_df$year)
write.csv(carbon_tax_panel_df, file = "./data/carbon_tax_df.csv", row.names = FALSE)
ggplot(carbon_tax_panel_df, aes(x = year, y= co2_per_capita, color = factor(tax), label = country_code)) +
geom_text()
ggplot(carbon_tax_panel_df, aes(x = year, y= co2_per_capita, color = factor(tax), label = country_code)) +
geom_text() +
theme_minimal()
ggplot(carbon_tax_panel_df, aes(x = year, y= co2_per_capita, color = factor(tax), label = country_code)) +
geom_text() +
+ theme(legend.position="bottom")+
theme_minimal() +
scale
ggplot(carbon_tax_panel_df, aes(x = year, y= co2_per_capita, color = factor(tax), label = country_code)) +
geom_text() +
+ theme(legend.position="bottom")+
theme_minimal()
ggplot(carbon_tax_panel_df, aes(x = year, y= co2_per_capita, color = factor(tax), label = country_code)) +
geom_text() +
theme(legend.position="bottom") +
theme_minimal()
geom_text(country_code == "KHE") +
theme(legend.position="bottom") +
theme_minimal()
ggplot(carbon_tax_panel_df, aes(x = year, y= co2_per_capita, color = factor(tax), label = country_code == "KHE")) +
geom_point()
geom_text() +
theme(legend.position="bottom") +
theme_minimal()
ggplot(carbon_tax_panel_df, aes(x = year, y= co2_per_capita, color = factor(tax), label = country_code == "KHE")) +
geom_point()
ggplot(carbon_tax_panel_df, aes(x = year, y= co2_per_capita, color = factor(tax), label = country_code == "KHE")) +
geom_point() +
geom_text() +
theme(legend.position="bottom") +
theme_minimal()
ggplot(carbon_tax_panel_df, aes(x = year, y= co2_per_capita, color = factor(tax), label = country_code)) +
geom_point() +
geom_text(country_code == KHE) +
theme(legend.position="bottom") +
theme_minimal()
ggplot(carbon_tax_panel_df, aes(x = year, y= co2_per_capita, color = factor(tax), label = country_code)) +
geom_point() +
geom_text(country_code == "KHE") +
theme(legend.position="bottom") +
theme_minimal()
ggplot(carbon_tax_panel_df, aes(x = year, y= co2_per_capita, color = factor(tax), label = country_code)) +
geom_point() +
geom_text() +
theme(legend.position="bottom") +
theme_minimal()
ggplot(carbon_tax_panel_df, aes(x = year, y= co2_per_capita, color = factor(tax))) +
geom_point() +
theme(legend.position="bottom") +
theme_minimal()
ggplot(carbon_tax_panel_df, aes(x = year, y= co2_per_capita, color = factor(tax))) +
geom_point() +
theme(legend.position="bottom") +
theme_minimal() +
labs(main ="Exploratory scatter-plot")
ggplot(carbon_tax_panel_df, aes(x = year, y= co2_per_capita, color = factor(tax))) +
geom_point() +
theme(legend.position="bottom") +
theme_minimal() +
labs(title = "Exploratory scatter-plot")
ggplot(carbon_tax_panel_df, aes(x = year, y= co2_per_capita, color = factor(tax))) +
geom_point() +
theme(legend.position="bottom") +
theme_minimal() +
labs(title = "Exploratory scatter-plot")
ggplot(carbon_tax_panel_df, aes(x = year, y= co2_per_capita, color = factor(tax))) +
geom_point() +
theme_minimal() +
theme(legend.position="bottom") +
labs(title = "Exploratory scatter-plot")
ggplot(carbon_tax_panel_df, aes(x = year, y= co2_per_capita, color = factor(tax))) +
geom_point() +
theme_minimal() +
theme(legend.position="bottom") +
labs(title = "Exploratory plot of CO2 emmisions per capita",
x = "Year",
y = "CO2 emmisions in metric tons (T)")
ggplot(carbon_tax_panel_df, aes(x = year, y= co2_per_capita, color = factor(tax))) +
geom_point() +
theme_minimal() +
theme(legend.position="bottom") +
scale_colour_manual(labels = c("No tax", "Tax")) +
labs(title = "Exploratory plot of CO2 emmisions per capita",
x = "Year",
y = "CO2 emmisions in metric tons (T)")
ggplot(carbon_tax_panel_df, aes(x = year, y= co2_per_capita, color = factor(tax))) +
geom_point() +
theme_minimal() +
theme(legend.position="bottom") +
scale_colour_discrete(labels = c("No tax", "Tax")) +
labs(title = "Exploratory plot of CO2 emmisions per capita",
x = "Year",
y = "CO2 emmisions in metric tons (T)")
ggplot(carbon_tax_panel_df, aes(x = year, y= co2_per_capita, color = factor(tax))) +
geom_point() +
theme_minimal() +
theme(legend.position="bottom") +
labs(title = "Exploratory plot of CO2 emmisions per capita",
x = "Year",
y = "CO2 emmisions in metric tons (T)",
color = "Carbon tax") +
scale_colour_discrete(labels = c("No", "In place"))
carbon_tax_df <- read.csv("./data/carbon_tax_df.csv") # simulated data
names(carbon_tax_df) # to check the names of the variables in our data
table(carbon_tax_df$year, carbon_tax_df$tax) %>%
kable() %>% # create kable table
kable_styling()
table(carbon_tax_df$tax, carbon_tax_df$year) %>%
kable() %>% # create kable table
kable_styling()
ggplot(carbon_tax_panel_df, aes(x = year, y= co2_per_capita, color = factor(tax))) +
geom_point() +
theme_minimal() +
theme(legend.position="bottom") +
labs(title = "Exploratory plot of CO2 emmisions per capita",
x = "Year",
y = "CO2 emmisions in metric tons (T)",
color = "Carbon tax") +
scale_colour_discrete(labels = c("No", "In place"))
naive_carbon <- lm(co2_per_capita ~ tax + country_name + year, data = carbon_tax_df)
stargazer(naive_carbon, type = "html")
naive_carbon <- lm(co2_per_capita ~ tax, data = carbon_tax_df)
stargazer(naive_carbon, type = "html")
naive_carbon
lsdv_unit_fe <- lm(co2_per_capita ~ tax + country_name + year, data = carbon_tax_df)
summary(plm(co2_per_capita ~ tax, data = carbon_tax_panel_df, index = c("country_name"), model = "within"))
summary(plm(co2_per_capita ~ tax, data = carbon_tax_panel_df, index = c("country_name"), model = "within"))
summary(plm(co2_per_capita ~ tax, data = carbon_tax_panel_df, index = c("country_name", "year"), model = "within", effect = "twoways"))
summary(plm(co2_per_capita ~ tax, data = carbon_tax_panel_df, index = c("country_name"), model = "within"))
summary(plm(co2_per_capita ~ tax, data = carbon_tax_panel_df, index = c("country_name", "year"), model = "within"))
summary(plm(co2_per_capita ~ tax, data = carbon_tax_panel_df, index = c("country_name", "year"), model = "within", effect = "twoways"))
unit_fe <- plm(co2_per_capita ~ tax, data = carbon_tax_panel_df, index = c("country_name"), model = "within")
lsdv_unit_fe
unit_fe
lsdv_unit_fe
lsdv_unit_fe <- lm(co2_per_capita ~ tax + country_name, data = carbon_tax_df)
lsdv_unit_fe
unit_fe
unit_time_fe
lsdv_unit_time_fe <- lm(co2_per_capita ~ tax + country_name + factor(year), data = carbon_tax_df)
unit_time_fe <- plm(co2_per_capita ~ tax, data = carbon_tax_df, index = c("country_name", "year"),  model = "within", effect = "twoways")
unit_time_fe
