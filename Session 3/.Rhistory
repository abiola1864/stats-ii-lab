library(dplyr) # data wrangling
library(ggplot2) # plots
library(ggdag) #dags
library(ggpubr) #arranging plot output for html
library(wooldridge) ##package with cigs data
install.packages("wooldridge")
ipw_data_full_weight<-load("C:/Users/User/Dropbox/PhD/Lectures/Stats Lab/AMI-2020-R-scripts/exercise17.Rdata")
load("C:/Users/User/Dropbox/PhD/Lectures/Stats Lab/AMI-2020-R-scripts/exercise17.Rdata")
summary(lm(Y ~ X  ,data=ipw_data_full_weight))
summary(lm(Y ~ X + W2 + W1 ,data=ipw_data_full_weight ))
View(ipw_data_full_weight)
library(dplyr) # data wrangling
library(ggplot2) # plots
library(ggdag) #dags
library(ggpubr) #arranging plot output for html
library(wooldridge) ##package with cigs data
set.seed(123) # for consistent results
# beauty - 1000 observations with mean 5 and sd 2.5 (arbitrary scale)
beauty <- rnorm(1000, 5, 0.1)
# talent - 1000 observations with mean 3 and sd 0.5 (arbitrary scale)
talent <- rnorm(1000, 3, 0.3)
# celebrity - binary
celebrity <-  ifelse(beauty + talent > 8, "celeb" ,"not_celeb")
dat <- data.frame(beauty, talent, celebrity,
stringsAsFactors = FALSE)
coor <- list(
x = c(Ce = 1, Be = 0, Ta = 2),
y = c(Ce = 0, Be = -2, Ta = -2)
)
dagify(Ce ~ Be,
Ce ~ Ta, coords = coor) %>% ggdag()
cp <- ggplot(dat, aes(x = beauty, y = talent)) +
geom_point() +
xlab("Beauty") +
ylab("Talent") +
geom_smooth(method = "lm", se = FALSE)
# add celebrity as a color aesthetic:
cp2 <- ggplot(dat, aes(x = beauty, y = talent,
col = celebrity)) +
geom_point() +
xlab("Beauty") +
ylab("Talent") +
geom_smooth(method = "lm", se = FALSE) +
theme(legend.position = "none")
cp <- ggplot(dat, aes(x = beauty, y = talent)) +
geom_point() +
xlab("Beauty") +
ylab("Talent") +
geom_smooth(method = "lm", se = FALSE)
# add celebrity as a color aesthetic:
cp2 <- ggplot(dat, aes(x = beauty, y = talent,
col = celebrity)) +
geom_point() +
xlab("Beauty") +
ylab("Talent") +
geom_smooth(method = "lm", se = FALSE) +
theme(legend.position = "none")
cp <- ggplot(dat, aes(x = beauty, y = talent)) +
geom_point() +
xlab("Beauty") +
ylab("Talent") +
geom_smooth(method = "lm", se = FALSE)
# add celebrity as a color aesthetic:
cp2 <- ggplot(dat, aes(x = beauty, y = talent,
col = celebrity)) +
geom_point() +
xlab("Beauty") +
ylab("Talent") +
geom_smooth(method = "lm", se = FALSE) +
theme(legend.position = "none")
cp2
false_model <- lm(talent ~ beauty + celebrity, data = dat)
summary(false_model)
#or in one line
#summary(false_model <- lm(talent ~ beauty + celebrity, data = dat))
right_model <- lm(talent ~ beauty, data = dat)
summary(right_model)
#or in one line
#summary(right_model <- lm(talent ~ beauty, data = dat))
data_bwght <- bwght #R will recognize bwght if the package wooldridge has been required
summary(mod <- lm(bwght ~ cigs + male, data = data_bwght))
dagify(y ~~ x) %>%
ggdag()
dagify(y ~ x,
d ~ x,
y ~ d) %>%
ggdag()
dagify(y ~ x,
x ~ d,
y ~ d) %>%
ggdag()
dagify(x ~ y,
x ~ d,
y ~ d) %>%
ggdag()
#single tie approach
dag1 <- dagify(D ~ U,
D ~ Z,
W ~ Z,
Y ~ D,
Y ~ U,
Y ~ W)
#all tie approach
dag2 <- dagify(D ~ U + Z,
W ~ Z,
Y ~ D + U + W)
#single tie approach
dag1 <- dagify(D ~ U,
D ~ Z,
W ~ Z,
Y ~ D,
Y ~ U,
Y ~ W)
#all tie approach
dag2 <- dagify(D ~ U + Z,
W ~ Z,
Y ~ D + U + W)
dag2
#single tie approach
dag1 <- dagify(D ~ U,
D ~ Z,
W ~ Z,
Y ~ D,
Y ~ U,
Y ~ W)
#all tie approach
dag2 <- dagify(D ~ U + Z,
W ~ Z,
Y ~ D + U + W)
dag2
ggdag(dag2)
## create a list containing the x- and y-axis coordinates for each variable
coor <- list(
x = c(Z = 0, D = 1, U = 2, Y = 3, W = 4),
y = c(Z = 0, D = -2, U = -1, Y = -2, W = 0)
)
#all tie approach and setting coords equals to the list I created
dag <- dagify(D ~ U + Z,
W ~ Z,
Y ~ D + U + W, coords = coor)
#plot
ggdag(dag)
# Load Libraries
coor <- list(
x = c(Z = 0, D = 1, U = 2, Y = 3, W = 4),
y = c(Z = 0, D = -2, U = -1, Y = -2, W = 0)
)
#all tie approach and setting coords equals to the list I created
dag <- dagify(D ~ U + Z,
W ~ Z,
Y ~ D + U + W, coords = coor)
coor <- list(
x = c(Z = 0, D = 1, U = 2, Y = 3, W = 4),
y = c(Z = 0, D = -2, U = -1, Y = -2, W = 0)
)
#all tie approach and setting coords equals to the list I created
dag <- dagify(D ~ U + Z,
W ~ Z,
Y ~ D + U + W, coords = coor)
#plot
ggdag(dag)
coor <- list(
x = c(X = 0, D = 0, Z= 0, U = 1, M= 2, Y=3),
y = c(X = 0, D = -1, Z= -3, U = 0, M=-2, Y = -1)
)
#all tie approach and setting coords equals to the list I created
dag <- dagify(U ~ X,
D ~ Z + X,
Z ~ Y,
Y ~ Z+D+U+M,
M ~ D + Z, coords = coor)
#plot
ggdag(dag)
coor <- list(
x = c(X = 0, D = 0, Z= 0, U = 1, M= 1, Y=3),
y = c(X = 0, D = -1, Z= -3, U = 0, M=-2, Y = -1)
)
#all tie approach and setting coords equals to the list I created
dag <- dagify(U ~ X,
D ~ Z + X,
Z ~ Y,
Y ~ Z+D+U+M,
M ~ D + Z, coords = coor)
#plot
ggdag(dag)
coor <- list(
x = c(X = 0, D = 0, Z= 0, U = 1, M= 1, Y=2),
y = c(X = 0, D = -1, Z= -3, U = 0, M=-2, Y = -1)
)
#all tie approach and setting coords equals to the list I created
dag <- dagify(U ~ X,
D ~ Z + X,
Z ~ Y,
Y ~ Z+D+U+M,
M ~ D + Z, coords = coor)
#plot
ggdag(dag)
coor <- list(
x = c(X = 0, D = 0, Z= 0, U = 1, M= 1, Y=2),
y = c(X = 0, D = -1, Z= -3, U = 0, M=-2, Y = -1)
)
#all tie approach and setting coords equals to the list I created
dag <- dagify(U ~ X,
D ~ Z + X,
Z ~~  Y,
Y ~ Z+D+U+M,
M ~ D + Z, coords = coor)
#plot
ggdag(dag)
coor <- list(
x = c(X = 0, D = 0, Z= 0, U = 1, M= 1, Y=2),
y = c(X = 0, D = -1, Z= -3, U = 0, M=-2, Y = -1)
)
#all tie approach and setting coords equals to the list I created
dag <- dagify(U ~ X,
D ~ Z + X,
Z ~~  Y,
Y ~ Z+D+U+M,
M ~ D + Z, coords = coor)
#plot
ggdag(dag)
coor <- list(
x = c(X = 0, D = 0, Z= 0, U = 1, M= 1, Y=2),
y = c(X = 0, D = -1, Z= -3, U = 0, M=-2, Y = -1)
)
#all tie approach and setting coords equals to the list I created
dag <- dagify(U ~ X,
D ~ Z + X,
Z ~~  Y,
Y ~ D+U+M,
M ~ D + Z, coords = coor)
#plot
ggdag(dag)
BWJOP <- readRDS("C:/Users/User/Documents/GitHub/assignment-3-abiola1864/BWJOP.RDS")
dat <- readRDS("C:/Users/User/Documents/GitHub/assignment-3-abiola1864/BWJOP.RDS")
dat <- readRDS("C:/Users/User/Documents/GitHub/assignment-3-abiola1864/BWJOP.RDS")
View(BWJOP)
dat <- readRDS("C:/Users/User/Documents/GitHub/assignment-3-abiola1864/BWJOP.RDS")
#### naive estimator ####
summary(lm(Turnout ~ Unemploy_County + PcntBlack ,data=dat))
q()
